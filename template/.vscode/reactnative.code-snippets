{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  "Print to console": {
    "prefix": "log",
    "body": ["console.log('$1');", "$2"],
    "description": "Log output to console"
  },
  "Function Component": {
    "prefix": "rnfc",
    "body": [
      "import React from 'react';",
      "import { View, StyleSheet, Text } from 'react-native';",
      "",
      "const ${0:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <View style={styles.container}>",
      "      <Text>${0:${TM_FILENAME_BASE}}</Text>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default ${0:${TM_FILENAME_BASE}};",
      "",
      "const styles = StyleSheet.create({",
      "  container: {",
      "    flex: 1,",
      "    justifyContent: 'center',",
      "    alignItems: 'center',",
      "  },",
      "});",
      ""
    ],
    "description": "React Native Function Component"
  },
  "Function Component Simple": {
    "prefix": "rnc",
    "body": [
      "const ${0:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <View>",
      "      <Text>${0:${TM_FILENAME_BASE}}</Text>",
      "    </View>",
      "  );",
      "};",
      ""
    ],
    "description": "React Native Function Component"
  },
  "Style": {
    "prefix": "rns",
    "body": [
      "const styles = StyleSheet.create({",
      "  container: {",
      "    flex: 1,",
      "    justifyContent: 'center',",
      "    alignItems: 'center',",
      "  },",
      "});",
      ""
    ],
    "description": "React Native Function Component"
  },
  "React Native Map Function": {
    "prefix": "rnmap",
    "body": [
      "<View>",
      "  {${items}.length > 0 ? (",
      "    ${items}.map((item, index) => {",
      "      return (",
      "        <View key={index}>",
      "          <Text>",
      "            {index} - {JSON.stringify(item)}",
      "          </Text>",
      "        </View>",
      "      );",
      "    })",
      "  ) : (",
      "    <Text>Empty</Text>",
      "  )}",
      "</View>"
    ],
    "description": "React Native Map Function"
  }
}
